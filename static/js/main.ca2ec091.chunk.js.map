{"version":3,"sources":["utils/utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","totalPages","Math","ceil","pages","isFirstPage","isLastPage","className","classNames","disabled","href","onClick","map","page","active","toPage","PER_PAGE_OPTIONS","DEFAULT_PER_PAGE_OPTION","App","useState","items","setItems","setPerPage","setCurrentPage","useEffect","startIndex","endIndex","currentPageItems","slice","totalItems","length","itemFrom","itemTo","min","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"yLAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,2BCGIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QAGI,IAFJC,mBAEI,MAFU,EAEV,EADJC,EACI,EADJA,aAEMC,EAAaC,KAAKC,KAAKN,EAAQC,GAC/BM,EAAQd,EAAW,EAAGW,GACtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAoBnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBACEA,UAAWC,IAAW,YAAa,CACjCC,SAAUJ,IAFd,SAKE,mBACEK,KAAK,QACL,UAAQ,WACRH,UAAU,YACV,gBAAeF,EACfM,QAxBoB,WACtBZ,EAAc,GAChBC,EAAaD,EAAc,IAiBzB,oBAWDK,EAAMQ,KAAI,SAAAC,GAAI,OACb,oBAEEN,UAAWC,IAAW,YAAa,CACjCM,OAAQD,IAASd,IAHrB,SAME,mBACEW,KAAI,WAAMG,GACV,UAAQ,WACRN,UAAU,YACVI,QAAS,WA/CK,IAACI,KA+CgBF,KA9CxBd,GACbC,EAAae,IAyCT,SAMGF,KAXEA,MAgBT,oBACEN,UAAWC,IAAW,YAAa,CACjCC,SAAUH,IAFd,SAKE,mBACEI,KAAK,QACL,UAAQ,WACRH,UAAU,YACV,gBAAeD,EACfK,QApDoB,WACtBZ,EAAcE,GAChBD,EAAaD,EAAc,IA6CzB,wBC1EFiB,EAAmB,CAAC,EAAG,EAAG,GAAI,IAC9BC,EAA0BD,EAAiB,GAGpCE,EAAgB,WAC3B,MAA0BC,mBAAmB,IAA7C,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAASF,GAAvC,mBAAOnB,EAAP,KAAgBwB,EAAhB,KACA,EAAsCH,mBALnB,GAKnB,mBAAOpB,EAAP,KAAoBwB,EAApB,KAEAC,qBAAU,WACRH,EFLK/B,EAAW,EAAG,IAAIsB,KAAI,SAAAlB,GAAC,qBAAYA,SEMvC,IAEH,IAOM+B,GAAc1B,EAAc,GAAKD,EACjC4B,EAAWD,EAAa3B,EACxB6B,EAAmBP,EAAMQ,MAAMH,EAAYC,GAE3CG,EAAaT,EAAMU,OACnBC,EAAWN,EAAa,EACxBO,EAAS9B,KAAK+B,IAAIP,EAAUG,GAElC,OACE,sBAAKtB,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCgC,EADjC,cAC+CC,EAD/C,eAC4DH,EAD5D,OAIA,sBAAKtB,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,wBACE2B,GAAG,kBACH3B,UAAU,eACV,UAAQ,kBACR4B,MAAOrC,EACPsC,SA9BiB,SACzBC,GAEAf,GAAYe,EAAMC,OAAOH,OACzBZ,EAfiB,IAoCX,SAOGP,EAAiBJ,KAAI,SAAA2B,GAAM,OAC1B,wBAAqBJ,MAAOI,EAA5B,SACGA,GADUA,UAOnB,uBAAOC,QAAQ,kBAAkBjC,UAAU,qBAA3C,+BAKF,cAAC,EAAD,CACEV,MAAOgC,EACP/B,QAASA,EACTC,YAAaA,EACbC,aAAcuB,IAGhB,6BACGI,EAAiBf,KAAI,SAAA6B,GAAI,OACxB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCvEjBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ca2ec091.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getItems(): string[] {\n  return getNumbers(1, 42).map(n => `Item ${n}`);\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlePageClick = (toPage: number) => {\n    if (toPage !== currentPage) {\n      onPageChange(toPage);\n    }\n  };\n\n  const handlePrevPageClick = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          href=\"#prev\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevPageClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            href={`#${page}`}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => handlePageClick(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          href=\"#next\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={isLastPage}\n          onClick={handleNextPageClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport { getItems } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst PER_PAGE_OPTIONS = [3, 5, 10, 20];\nconst DEFAULT_PER_PAGE_OPTION = PER_PAGE_OPTIONS[1];\nconst DEFAULT_PAGE = 1;\n\nexport const App: React.FC = () => {\n  const [items, setItems] = useState<string[]>([]);\n  const [perPage, setPerPage] = useState(DEFAULT_PER_PAGE_OPTION);\n  const [currentPage, setCurrentPage] = useState(DEFAULT_PAGE);\n\n  useEffect(() => {\n    setItems(getItems());\n  }, []);\n\n  const handleSelectChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(DEFAULT_PAGE);\n  };\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentPageItems = items.slice(startIndex, endIndex);\n\n  const totalItems = items.length;\n  const itemFrom = startIndex + 1;\n  const itemTo = Math.min(endIndex, totalItems);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemFrom} - ${itemTo} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            value={perPage}\n            onChange={handleSelectChange}\n          >\n            {PER_PAGE_OPTIONS.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentPageItems.map(item => (\n          <li\n            key={item}\n            data-cy=\"item\"\n          >\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}