{"version":3,"sources":["utils/utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","_ref","total","perPage","_ref$currentPage","currentPage","onPageChange","totalPages","Math","ceil","pages","isFirstPage","isLastPage","_jsxs","className","children","_jsx","classNames","disabled","href","onClick","map","page","active","concat","toPage","PAGE_SIZE_OPTIONS","DEFAULT_PAGE_SIZE","App","_useState","useState","_useState2","_slicedToArray","items","setItems","_useState3","_useState4","setPerPage","_useState5","_useState6","setCurrentPage","useEffect","startIndex","endIndex","currentPageItems","slice","totalItems","length","itemFrom","itemTo","min","id","value","onChange","event","target","option","htmlFor","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad637bee.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n\nexport function getItems(): string[] {\n  return getNumbers(1, 42).map(n => `Item ${n}`);\n}\n","import classNames from 'classnames';\nimport { getNumbers } from '../../utils';\n\ntype Props = {\n  total: number;\n  perPage: number;\n  currentPage?: number;\n  onPageChange: (page: number) => void;\n};\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage = 1,\n  onPageChange,\n}) => {\n  const totalPages = Math.ceil(total / perPage);\n  const pages = getNumbers(1, totalPages);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === totalPages;\n\n  const handlePageClick = (toPage: number) => {\n    if (toPage !== currentPage) {\n      onPageChange(toPage);\n    }\n  };\n\n  const handlePrevPageClick = () => {\n    if (currentPage > 1) {\n      onPageChange(currentPage - 1);\n    }\n  };\n\n  const handleNextPageClick = () => {\n    if (currentPage < totalPages) {\n      onPageChange(currentPage + 1);\n    }\n  };\n\n  return (\n    <ul className=\"pagination\">\n      <li\n        className={classNames('page-item', {\n          disabled: isFirstPage,\n        })}\n      >\n        <a\n          href=\"#prev\"\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          aria-disabled={isFirstPage}\n          onClick={handlePrevPageClick}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={classNames('page-item', {\n            active: page === currentPage,\n          })}\n        >\n          <a\n            href={`#${page}`}\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            onClick={() => handlePageClick(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li\n        className={classNames('page-item', {\n          disabled: isLastPage,\n        })}\n      >\n        <a\n          href=\"#next\"\n          data-cy=\"nextLink\"\n          className=\"page-link\"\n          aria-disabled={isLastPage}\n          onClick={handleNextPageClick}\n        >\n          »\n        </a>\n      </li>\n    </ul>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.css';\n\nimport { getItems } from './utils';\nimport { Pagination } from './components/Pagination';\n\nconst PAGE_SIZE_OPTIONS = [3, 5, 10, 20];\nconst DEFAULT_PAGE_SIZE = PAGE_SIZE_OPTIONS[1];\nconst DEFAULT_PAGE_INDEX = 1;\n\nexport const App: React.FC = () => {\n  const [items, setItems] = useState<string[]>([]);\n  const [perPage, setPerPage] = useState(DEFAULT_PAGE_SIZE);\n  const [currentPage, setCurrentPage] = useState(DEFAULT_PAGE_INDEX);\n\n  useEffect(() => {\n    setItems(getItems());\n  }, []);\n\n  const handleSelectChange = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    setPerPage(+event.target.value);\n    setCurrentPage(DEFAULT_PAGE_INDEX);\n  };\n\n  const startIndex = (currentPage - 1) * perPage;\n  const endIndex = startIndex + perPage;\n  const currentPageItems = items.slice(startIndex, endIndex);\n\n  const totalItems = items.length;\n  const itemFrom = startIndex + 1;\n  const itemTo = Math.min(endIndex, totalItems);\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${itemFrom} - ${itemTo} of ${totalItems})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            data-cy=\"perPageSelector\"\n            value={perPage}\n            onChange={handleSelectChange}\n          >\n            {PAGE_SIZE_OPTIONS.map(option => (\n              <option key={option} value={option}>\n                {option}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n\n      <Pagination\n        total={totalItems}\n        perPage={perPage}\n        currentPage={currentPage}\n        onPageChange={setCurrentPage}\n      />\n\n      <ul>\n        {currentPageItems.map(item => (\n          <li key={item} data-cy=\"item\">\n            {item}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}